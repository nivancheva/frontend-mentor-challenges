:root {
    --clr-dividers: hsl(240, 5%, 91%);
    --clr-text: hsl(240, 6%, 50%);
    --clr-text-h: hsl(237, 12%, 33%);
    --clr-start-gradient: hsl(273, 75%, 66%);
    --clr-end-gradient: hsl(240, 73%, 65%);
    --clr-text-1: hsl(238, 29%, 16%);
    --clr-text-hover:hsl(14, 88%, 65%);

    --ff: 'Kumbh Sans', sans-serif;
    --fw-regular: 400;
    --fw-bold: 700;
    --fz: 0.75rem
}

/*
  1. Use a more-intuitive box-sizing model.
*/
*, *::before, *::after {
    box-sizing: border-box;
  }
  /*
    2. Remove default margin
  */
  * {
    margin: 0;
  }
  /*
    3. Allow percentage-based heights in the application
  */
  html, body {
    height: 100%;
  }
  /*
    Typographic tweaks!
    4. Add accessible line-height
    5. Improve text rendering
  */
  body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
  }
  /*
    6. Improve media defaults
  */
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }
  /*
    7. Remove built-in form typography styles
  */
  input, button, textarea, select {
    font: inherit;
  }
  /*
    8. Avoid text overflows
  */
  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }
  /*
    9. Create a root stacking context
  */
  #root, #__next {
    isolation: isolate;
  }


body {
    font-family: var(--ff);
    font-weight: var(--fw-regular);
    font-size: var(--fz);

    background-image: linear-gradient(var(--clr-start-gradient), var(--clr-end-gradient));
    

    display: grid;
    place-items: center;
}

.card {
    background-color: white;
    margin: 10em 2em;
    padding: 5em 2em;
    position: relative;
    border-radius: 2em;
}

.container {
    display: grid;
    gap: 2em;
}

.image_desktop,
.image_desktop__box
 {
    display:none;
}

.image_mobile {
    position: absolute;
    width: 70%;
    max-width: 250px;
    left: 50%;
    top: 0;
    transform: translate(-50%, -60%);
}

.image_mobile::before {
    content: "";
    display: block;
    position: absolute;
    background-image: url(images/bg-pattern-mobile.svg);
    background-repeat: no-repeat;
    background-size: contain;
    left: 50%;
    width: 100%;
    height: 100%; 
    transform: translate(-50%, 60%);
}

h1 {
    text-transform: uppercase;
}

.arrow {
    border: none;
    background-color: white;
    width: 100%;
    margin: 0;
    padding: 0;
}

.question {
    display: grid;
    grid-template-columns: 1fr 5%;
    align-items: start;
    justify-content: space-between;
    gap: 2em;

    position: relative;
}

.question::after {
    content: "";
    position: absolute;
    display: block;
    border: 1px solid var(--clr-dividers);
    bottom: -1em;
    left: 0;
    right: 0;
}

.question__title:hover {
    cursor: pointer;
    color: var(--clr-text-hover);
}

.question__text {
    display: none;
}

.attribution { 
    position: absolute;
    bottom: 3em;
    font-size: 11px;
    text-align: center;
}

.attribution a {
    color: hsl(228, 53%, 35%);
}

@media (max-width: 800px) {
   .card {
    padding: 10em 2em 5em;
   }

   h1 {
    text-align: center;
   }
  
}

@media (min-width: 800px) {
    .card { 
        display: grid;
        grid-template-columns: 1fr 1fr;
        max-width: 1200px;

        overflow: hidden;
    }

    .wraper {
        position: relative;
        margin: 0 5em;
    }

    .image_mobile {
        display: none;
    }

    .image_desktop {
        display: block;
        position: relative;
        left: 0;
        transform: translate(-20%, 0);
    }

    .image_desktop::before {
        content: "";
        display: block;
        position: absolute;
        background-image: url(images/bg-pattern-desktop.svg);
        background-repeat: no-repeat;
        background-size: contain;
        width: 100%;
        height: 150%;
        transform: translate(20, 60%);
    }

    .image_desktop__box {
        display: block;
        position: absolute;
        top: 50%;
        z-index: 1;
        transform: translate(-40%, -20%);
    }


}

